import{a6 as p,j as m}from"./entry.db787e62.js";import{u as g}from"./fetch.d6edc54b.js";let a;const y=new Uint8Array(16);function l(){if(!a&&(a=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!a))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(y)}const t=[];for(let n=0;n<256;++n)t.push((n+256).toString(16).slice(1));function U(n,e=0){return t[n[e+0]]+t[n[e+1]]+t[n[e+2]]+t[n[e+3]]+"-"+t[n[e+4]]+t[n[e+5]]+"-"+t[n[e+6]]+t[n[e+7]]+"-"+t[n[e+8]]+t[n[e+9]]+"-"+t[n[e+10]]+t[n[e+11]]+t[n[e+12]]+t[n[e+13]]+t[n[e+14]]+t[n[e+15]]}const h=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),d={randomUUID:h};function I(n,e,u){if(d.randomUUID&&!e&&!n)return d.randomUUID();n=n||{};const o=n.random||(n.rng||l)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,e){u=u||0;for(let c=0;c<16;++c)e[u+c]=o[c];return e}return U(o)}function D(n,e={}){const u=m(),o=localStorage.getItem("token"),c={baseURL:u.public.apiDomain,retry:1,onRequest({options:r}){o&&(r.headers={...r.headers,Authorization:`Bearer ${o}`})},async onResponse({response:r}){try{const i=JSON.parse(r._data);i.token&&localStorage.setItem("token",i.token)}catch{}}},s=p(e,c);return g(n,s,"$segpNTqa5s")}export{D as u,I as v};
